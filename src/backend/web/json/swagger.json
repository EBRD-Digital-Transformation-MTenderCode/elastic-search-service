{
    "swagger": "2.0",
    "info": {
        "description": "Elastic Search service является сервисом по поиску данных в ElasticSearch.",
        "version": "1.0.0",
        "title": "Elastic Search service"
    },
    "basePath": "/rest-api",
    "schemes": [
        "http"
    ],
    "paths": {
        "/v1":{
            "get":{
                "tags":[
                    "methods"
                ],
                "summary":"Get all methods (Получение всех methods)",
                "description":"Метод используется для получения всех существующих методов, а также каждого отдельного метода с их свойствами в сервисе MDM.",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "in":"query",
                        "name":"url",
                        "type":"string",
                        "required":false,
                        "description":"При заполнении поля значением url отдельного метода получим инфо о свойствах этого метода (для получения url отдельного метода осуществляем метод Get/methods не заполняя данное поле)."
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/200Methods"
                        }
                    },
                    "422":{
                        "description":"Data Validation Failed.",
                        "schema":{
                            "$ref":"#/definitions/ErrorModel"
                        }
                    }
                }
            }
        },
        "/v1/budgets/search": {
            "get": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Get all budgets with ElasticSearch (Получение всех бюджетов через Elasticsearch)",
                "description": "получение всех записей о бюджетах через Elasticsearch",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters":[
                    {
                        "in":"query",
                        "name":"ocid",
                        "type":"string",
                        "required":false,
                        "description": "ocid бюджета"
                    },
                    {
                        "in":"query",
                        "name":"title",
                        "type":"string",
                        "required":false,
                        "description": "заголовок бюджета"
                    },
                    {
                        "in":"query",
                        "name":"description",
                        "type":"string",
                        "required":false,
                        "description": "описание бюджета"
                    },
                    {
                        "in":"query",
                        "name":"pageSize",
                        "type":"string",
                        "required":false,
                        "description": "Кол-во записей на странице (значение -1 выводит все записи)"
                    },
                    {
                        "in":"query",
                        "name":"page",
                        "type":"string",
                        "required":false,
                        "description": "Номер страницы для отображения"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/200Budget2"
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "schema":{
                            "$ref":"#/definitions/ErrorModel"
                        }
                    }
                }
            }
        },
        "/v1/tenders/search": {
            "get": {
                "tags": [
                    "Tenders"
                ],
                "summary": "Get all tenders with ElasticSearch (Получение всех тендеров через Elasticsearch)",
                "description": "получение всех записей о тендерах через Elasticsearch",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters":[
                    {
                        "in":"query",
                        "name":"ocid",
                        "type":"string",
                        "required":false,
                        "description": "ocid тендера"
                    },
                    {
                        "in":"query",
                        "name":"title",
                        "type":"string",
                        "required":false,
                        "description": "заголовок тендера"
                    },
                    {
                        "in":"query",
                        "name":"description",
                        "type":"string",
                        "required":false,
                        "description": "описание тендера"
                    },
                    {
                        "in":"query",
                        "name":"pageSize",
                        "type":"string",
                        "required":false,
                        "description": "Кол-во записей на странице (значение -1 выводит все записи)"
                    },
                    {
                        "in":"query",
                        "name":"page",
                        "type":"string",
                        "required":false,
                        "description": "Номер страницы для отображения"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/200Tender2"
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "schema":{
                            "$ref":"#/definitions/ErrorModel"
                        }
                    }
                }
            }
        }
    }
}
